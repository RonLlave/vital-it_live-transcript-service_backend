version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        - NODE_ENV=production
    container_name: live-transcript-service
    restart: unless-stopped
    ports:
      - "${PORT:-3003}:3003"
    environment:
      # Node.js Configuration - CRITICAL FOR STABILITY
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=8192
      - PORT=3003
      - SERVICE_NAME=live-transcript-service

      # Meeting Bot API Configuration
      - MEETING_BOT_API_URL=${MEETING_BOT_API_URL}
      - MEETING_BOT_API_KEY=${MEETING_BOT_API_KEY}

      # Google Gemini API Configuration
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - GOOGLE_GEMINI_MODEL=${GOOGLE_GEMINI_MODEL:-gemini-1.5-flash}
      - GEMINI_AUDIO_SAMPLE_RATE=${GEMINI_AUDIO_SAMPLE_RATE:-16000}

      # Audio Processing Configuration
      - AUDIO_FETCH_INTERVAL=${AUDIO_FETCH_INTERVAL:-5000}
      - AUDIO_BUFFER_SIZE=${AUDIO_BUFFER_SIZE:-30}
      - AUDIO_FORMAT=${AUDIO_FORMAT:-WAV}
      - TRANSCRIPTION_START_DELAY=${TRANSCRIPTION_START_DELAY:-30}

      # Transcript Configuration
      - TRANSCRIPT_LANGUAGE=${TRANSCRIPT_LANGUAGE:-auto}
      - ENABLE_SPEAKER_DIARIZATION=${ENABLE_SPEAKER_DIARIZATION:-true}
      - MAX_TRANSCRIPT_LENGTH=${MAX_TRANSCRIPT_LENGTH:-500000}
      - TRANSCRIPT_LANGUAGE_HINTS=${TRANSCRIPT_LANGUAGE_HINTS:-en,de,es,fr,it,pt,nl,pl}

      # Service Configuration
      - ENABLE_HEALTH_CHECKS=${ENABLE_HEALTH_CHECKS:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3003/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s # Increased from 60s for better startup tolerance

    # Resource limits (matching Meeting Bot API project)
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 20G
        reservations:
          cpus: "2"
          memory: 8G

    # CRITICAL: Process limits to prevent "too many open files" errors
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 4096
        hard: 4096

    # CRITICAL: Proper init for zombie process reaping
    init: true

    # CRITICAL: Graceful shutdown
    stop_grace_period: 60s

    # CRITICAL: Shared memory for Node.js operations
    shm_size: 2gb

    # Enhanced logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

    # Volume for temporary audio files and persistent data
    volumes:
      - audio_temp:/app/temp
      - transcript_data:/app/data
      - logs:/app/logs

    # Network configuration
    networks:
      - transcript_network

# Volumes
volumes:
  audio_temp:
    driver: local
  transcript_data:
    driver: local
  logs:
    driver: local

# Networks
networks:
  transcript_network:
    driver: bridge
